{"version":3,"sources":["pages/Admin/ProductDashboard.tsx","contexts/Login.ts","httpClient.tsx","pages/Admin/ProductEditForm.tsx","pages/Admin/SignIn.tsx","pages/Admin/index.tsx","pages/ProductList/ProductListItem.tsx","pages/ProductList/index.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["VIEWS","LoginContext","React","createContext","authed","user","setAuthed","setUser","httpClient","axios","create","baseURL","OriginalState","name","slug","price","quantity","description","ProductEditForm","props","state","handleSubmit","e","preventDefault","onSubmit","resetState","updateField","field","value","setState","handleCancel","onCancel","render","Grid","container","spacing","TextField","required","id","label","variant","onChange","event","target","multiline","rows","sx","m","width","type","inputProps","min","InputProps","endAdornment","InputAdornment","position","FormControl","fullWidth","InputLabel","htmlFor","FilledInput","startAdornment","item","Button","onClick","initialState","Component","defaultProps","resetForm","ProductDashboard","products","currentProduct","fetchProducts","view","productList","toggleCreate","createProduct","editProduct","product","saveProduct","productData","a","action","getProductHttpAction","actionEndpoint","getActionEndpointFromProductData","afterSave","this","getProducts","get","data","productSlug","delete","patch","post","endpoint","components","Fab","color","aria-label","push","Container","List","bgcolor","length","ListItem","ListItemText","primary","map","key","secondaryAction","ButtonGroup","IconButton","edge","deleteProduct","secondary","substring","reverse","SignIp","useContext","FormData","currentTarget","userData","email","password","response","status","console","log","component","maxWidth","CssBaseline","Box","marginTop","display","flexDirection","alignItems","Avatar","Typography","noValidate","mt","xs","autoComplete","mb","AdminPage","context","contextType","ProductListItem","productId","handleAddToCart","onAddToCart","parseInt","endIcon","ProductListing","cartItems","showDialog","showSnackBar","addToCart","productName","buy","handleSnackbarClose","filter","Snackbar","open","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","Alert","severity","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","theme","createTheme","App","Provider","ThemeProvider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72753e18.chunk.js","sourcesContent":["import AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { ButtonGroup, Container, List, ListItem, ListItemText } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport IconButton from '@mui/material/IconButton';\nimport React, { Component } from 'react';\nimport Fab from '@mui/material/Fab';\nimport { httpClient } from '../../httpClient';\nimport { OriginalState, ProductEditForm, ProductEditFormState } from './ProductEditForm';\n\nenum VIEWS {\n    productList,\n    createProduct,\n    editProduct\n}\n\n\nexport class ProductDashboard extends Component {\n\n    state = {\n        products: [],\n        currentProduct: OriginalState,\n        fetchProducts: true,\n        view: VIEWS.productList\n    }\n\n    componentDidMount() {\n        this.getProducts();\n    }\n\n    componentDidUpdate() {\n        this.getProducts();\n    }\n\n    async getProducts() {\n\n        if (!this.state.fetchProducts) return;\n\n        const { data:products } = await httpClient.get('/product');\n\n        this.setState({ \n            products: products,\n            fetchProducts: false\n        })\n    }\n\n    async deleteProduct(productSlug:string) {\n        \n        const response = await httpClient.delete(`/product/${productSlug}`);\n\n        this.setState({ fetchProducts: true });\n    }\n\n    toggleCreate = () => {\n        let view;\n\n        switch (this.state.view) {\n            \n            case VIEWS.productList:\n                view = VIEWS.createProduct;\n                break;\n            \n            default:\n                view = VIEWS.productList;\n        }\n\n        this.setState({ view });\n    }\n\n    editProduct = (product: any) => {\n        this.setState({\n            view: VIEWS.editProduct,\n            currentProduct: product\n        });\n    }\n\n    saveProduct = async (productData: any, resetForm: Function) => {\n\n        const action = this.getProductHttpAction();\n        const actionEndpoint = this.getActionEndpointFromProductData(productData);\n        const response = await action(actionEndpoint, productData);\n\n        this.afterSave();\n        resetForm();\n    }\n\n    afterSave() {\n        if (this.state.view === VIEWS.editProduct) this.toggleCreate();\n        this.setState({ fetchProducts: true });\n    }\n\n    getProductHttpAction() {\n        switch(this.state.view) {\n            case VIEWS.editProduct:\n                return httpClient.patch;\n            case VIEWS.createProduct:\n                return httpClient.post;\n\n            default:\n                return () => {}\n        }\n    }\n\n    getActionEndpointFromProductData(productData: ProductEditFormState) {\n\n        let endpoint = '/product';\n\n        if (this.state.view === VIEWS.editProduct) {\n            endpoint += `/${productData.slug}`\n        }\n\n        return endpoint;\n    }\n\n    render() {\n\n        const components = [\n            <Fab \n                color=\"primary\"\n                aria-label=\"add\"\n                onClick = {this.toggleCreate}\n            >\n                {this.state.view === VIEWS.productList ? \n                    <AddIcon /> : <CloseIcon/>\n                }\n            </Fab>\n        ]\n\n        // Mal-escrito\n        switch (this.state.view) {\n\n            case VIEWS.createProduct:\n                components.push(\n                    <Container>\n                        <ProductEditForm\n                            onSubmit = {this.saveProduct}\n                            onCancel = {this.toggleCreate}\n                        />\n                    </Container>\n                );\n                break;\n\n            case VIEWS.editProduct:\n                components.push(\n                    <Container>\n                        <ProductEditForm\n                            initialState = {this.state.currentProduct}\n                            onSubmit = {this.saveProduct}\n                            onCancel = {this.toggleCreate}\n                        />\n                    </Container>\n                );\n                break;\n\n            case VIEWS.productList: \n                components.push(\n                    <Container>\n                        <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\n                            {!this.state.products.length && (\n                                <ListItem>\n                                    <ListItemText \n                                        primary = {'Nenhum Produto Encontrado'} \n                                    />\n                                </ListItem>\n                            )}\n\n                            {this.state.products.map((product:any, key) => (\n                                <ListItem\n                                    key={key}\n                                    secondaryAction={\n                                        <ButtonGroup>\n                                            <IconButton \n                                                edge=\"end\" \n                                                aria-label=\"edit\"\n                                                onClick = {() => this.editProduct(product)}\n                                            >\n                                                <EditIcon />\n                                            </IconButton>\n                                            <IconButton \n                                                edge=\"end\"\n                                                aria-label=\"delete\"\n                                                onClick = {() => this.deleteProduct(product.slug)}\n                                            >\n                                                <DeleteIcon />\n                                            </IconButton>\n                                        </ButtonGroup>\n                                    }\n                                >\n                                    <ListItemText \n                                        primary = {product.name} \n                                        secondary = {product.description.substring(0, 90) + '...'}\n                                    />\n                                </ListItem>\n                            ))}\n                        </List>\n                    </Container>\n                );\n                break;\n        }\n\n        return components.reverse();\n    }\n}","import React from 'react';\n\nexport const LoginContext = React.createContext({\n    authed: false,\n    user: {},\n    setAuthed: (authed:boolean) => {},\n    setUser: (user:any) => {},\n});","import axios from 'axios';\n\nexport const httpClient = axios.create({\n    baseURL: 'http://localhost:8080/api'\n});","import { Button, FilledInput, FormControl, Grid, InputAdornment, InputLabel, TextField } from '@mui/material';\nimport React, { Component, FormEventHandler } from 'react';\n\n\ntype ProductEditFormProps = typeof ProductEditForm.defaultProps & {\n}\n\nexport type ProductEditFormState = {\n    name: string,\n    slug: string,\n    price: number,\n    quantity: number,\n    description: string\n}\n\nexport const OriginalState: ProductEditFormState = {\n    name: '',\n    slug: '',\n    price: 0,\n    quantity: 0,\n    description: ''\n}\n\nexport class ProductEditForm extends Component<ProductEditFormProps> {\n    \n    static defaultProps = {\n        onSubmit: (state: ProductEditFormState, resetForm: Function) => {},\n        onCancel: () => {},\n        initialState: {...OriginalState}\n    }\n   \n    state: ProductEditFormState = {\n        ...OriginalState\n    }\n\n    constructor(props: ProductEditFormProps) {\n        super(props);\n\n        this.state = {...props.initialState};\n    }   \n\n    handleSubmit:FormEventHandler = (e) => {\n        e.preventDefault();\n        this.props.onSubmit({...this.state}, this.resetState);\n    }\n\n    updateField = (field:string, value:any) => {\n        this.setState( {[field]: value });\n    }\n\n    handleCancel = () => {\n        this.resetState();\n        this.props.onCancel();\n    }\n\n    resetState = () => {\n        this.setState({ ...OriginalState });\n    }\n\n    render = () => (\n        <form onSubmit={this.handleSubmit}>\n            <Grid container spacing={2}>\n                <TextField\n                    required\n                    id=\"filled-required\"\n                    label=\"Nome\"\n                    variant=\"filled\"\n                    onChange = {(event) => this.updateField('name', event.target.value)}\n                    value = {this.state.name}\n                />\n                <TextField\n                    id=\"filled-multiline-static\"\n                    label=\"Descrição\"\n                    multiline\n                    value = {this.state.description}\n                    onChange = {(event) => this.updateField('description', event.target.value)}\n                    variant=\"filled\"\n                    rows={4}\n                />\n                <TextField\n                    label=\"Quantidade\"\n                    id=\"filled-start-adornment\"\n                    sx={{ m: 1, width: '25ch' }}\n                    type=\"number\"\n                        inputProps= {{\n                            min: 0\n                        }}\n                    value = { this.state.quantity }\n                    onChange = {(event) => this.updateField('quantity', event.target.value)}\n                    InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">Un</InputAdornment>,\n                    }}\n                    variant=\"filled\"\n                />\n                <FormControl fullWidth sx={{ m: 1 }} variant=\"filled\">\n                    <InputLabel htmlFor=\"filled-adornment-amount\">Preço</InputLabel>\n                    <FilledInput\n                        id=\"filled-adornment-amount\"\n                        value={this.state.price}\n                        type=\"number\"\n                        inputProps= {{\n                            min: 0\n                        }}\n                        onChange={(event) => { this.updateField('price', event.target.value as unknown as number)}}\n                        startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                    />\n                </FormControl>\n            </Grid>\n            \n            <Grid container spacing={2}>\n                <Grid item>\n                    <Button \n                        variant=\"text\"\n                        onClick = {this.handleCancel}\n                    >\n                        Cancelar\n                    </Button>\n                </Grid>\n                <Grid item>\n                    <Button \n                        type=\"submit\"\n                        variant=\"contained\"\n                    >\n                        Salvar\n                    </Button>\n                </Grid>\n            </Grid>\n        </form>\n    )\n}","import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { Avatar, Box, Button, Container, CssBaseline, Grid, TextField, Typography } from '@mui/material';\nimport { useContext } from 'react';\nimport { LoginContext } from '../../contexts/Login';\nimport { httpClient } from '../../httpClient';\n\n\nexport default function SignIp() {\n\n    const { setAuthed } = useContext(LoginContext);\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    const userData = {\n      email: data.get(\"username\"),\n      password: data.get(\"password\"),\n    };\n\n    const response: Response = await httpClient.post('/auth/login', userData);\n\n    if (response.status === 200) {\n        setAuthed(true);\n    }\n    console.log({ response });\n  };\n\n  return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Login\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label=\"Email\"\n                  name=\"username\"\n                  autoComplete=\"username\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Senha\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Log In\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n  );\n}\n","import React, { Component } from 'react';\nimport { LoginContext } from '../../contexts/Login';\nimport { ProductDashboard } from './ProductDashboard';\nimport SignIn from './SignIn';\n\nexport class AdminPage extends Component {\n    render() {\n        console.log('context', this.context);\n        return (\n            this.context.authed ? <ProductDashboard /> : <SignIn />\n        );\n    }\n}\n\nAdminPage.contextType = LoginContext;","import { Component } from 'react';\nimport { ListItem, ButtonGroup, TextField, InputAdornment, Button, ListItemText } from '@mui/material';\nimport AddShoppingCartIcon from '@mui/icons-material/AddShoppingCart';\n\ninterface ProductListItemProps {\n    product: any,\n    onAddToCart: Function\n}\n\nexport class ProductListItem extends Component<ProductListItemProps> {\n\n    state = {\n        quantity: 0,\n        productId: 0\n    }\n\n    constructor(props: ProductListItemProps) {\n        super(props);\n\n        this.state.productId = parseInt(props.product.id);\n    }\n\n    updateField = (field:string , value:number) => {\n        this.setState({ [field]: value });\n    }\n\n    handleAddToCart = () => {\n        this.props.onAddToCart({\n            ...this.props.product,\n            quantity: this.state.quantity,\n        });\n    }\n    \n    render = () => (\n        <ListItem\n            secondaryAction={\n                <ButtonGroup>\n                    <TextField\n                        label=\"Quantidade\"\n                        id=\"filled-start-adornment\"\n                        sx={{ m: 1, width: '25ch' }}\n                        type=\"number\"\n                            inputProps= {{\n                                min: 0\n                            }}\n                        value = { this.state.quantity }\n                        onChange = {(event) => this.updateField('quantity', parseInt(event.target.value))}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">Un</InputAdornment>,\n                        }}\n                        variant=\"filled\"\n                    />\n                    <Button \n                        variant=\"contained\" \n                        onClick = {this.handleAddToCart}\n                        endIcon={<AddShoppingCartIcon />}\n                    >\n                        Adicionar\n                    </Button>\n                </ButtonGroup>\n            }\n        >\n            <ListItemText \n                primary = {this.props.product.name} \n                secondary = {this.props.product?.description ? this.props.product.description.substring(0, 90) + '...' : ''}\n            />\n        </ListItem>\n    )\n}","import ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport { Alert, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Fab, List, ListItem, ListItemText, Snackbar } from '@mui/material';\nimport React, { Component } from 'react';\nimport { httpClient } from '../../httpClient';\nimport { ProductListItem } from './ProductListItem';\n\n\nexport class ProductListing extends Component {\n\n    state = {\n        products: [],\n        cartItems: [],\n        showDialog: false,\n        showSnackBar: false,\n        fetchProducts: true\n    }\n\n    componentDidMount() {\n        this.getProducts();\n    }\n\n    componentDidUpdate() {\n        this.getProducts();\n    }\n\n    async getProducts() {\n\n        if (!this.state.fetchProducts) return;\n\n        const { data:products } = await httpClient.get('/product');\n\n        console.log('products', products);\n\n        this.setState({ \n            products: products.filter((product:any) => product.quantity > 0),\n            fetchProducts: false\n        })\n    }\n\n    addToCart = (product: any) => {\n\n        if (!product.quantity) return;\n\n        this.setState({\n            cartItems: [...this.state.cartItems, {\n                productId: product.id,\n                quantity: parseInt(product.quantity),\n                productName: product.name,\n                price: parseInt(product.price),\n            }],\n            showSnackBar: true\n        })\n    }\n\n    buy = async () => {\n\n        if (!this.state.cartItems.length) return;\n\n        const response = await httpClient.post('/order', this.state.cartItems);\n        this.setState({ showDialog: true, fetchProducts: true, cartItems: [] });\n    }\n\n    handleSnackbarClose = () => {\n        this.setState({ showSnackBar: false });\n    }\n\n    render() {\n\n        return (\n            <>\n                <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\n                    {!this.state.products.length && (\n                        <ListItem>\n                            <ListItemText \n                                primary = {'Nenhum Produto Encontrado'} \n                            />\n                        </ListItem>\n                    )}\n\n                    {this.state.products.map((product:any) => (\n                        <ProductListItem \n                            key = {product.id}\n                            product = {product}\n                            onAddToCart = {this.addToCart}\n                        />\n                    ))}\n                </List>\n                <Fab\n                    variant=\"extended\"\n                    onClick={this.buy}\n                >\n                    Finalizar Comprar\n                    <ShoppingCartIcon />\n                </Fab>\n                <Snackbar \n                    open={this.state.showSnackBar}\n                    autoHideDuration={3000}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleSnackbarClose}\n                >\n                    <Alert onClose={this.handleSnackbarClose} severity=\"success\" sx={{ width: '100%' }}>\n                        Item adicionado ao carrinho\n                    </Alert>\n                </Snackbar>\n                <Dialog\n                    open={this.state.showDialog}\n                    onClose={() => this.setState({ showDialog: false })}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">\n                        Pedido efetuado!\n                    </DialogTitle>\n                    <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Seu pedido foi efetuado.\n                    </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => this.setState({ showDialog: false })} autoFocus>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n            \n        )\n    }\n}","import { createTheme, ThemeProvider } from '@mui/material/styles';\nimport * as React from 'react';\nimport {\n  BrowserRouter as Router, Route, Switch\n} from \"react-router-dom\";\nimport { LoginContext } from './contexts/Login';\n\nimport { AdminPage }  from './pages/Admin';\nimport { ProductListing } from './pages/ProductList';\n\nconst theme = createTheme();\nexport default class App extends React.Component {\n  state = {\n    authed: false,\n    user: {},\n  }\n\n  render() {\n    return (\n      <LoginContext.Provider value={{\n        authed: this.state.authed, \n        user: this.state.user,\n        setAuthed: (authed) => this.setState({ authed }),\n        setUser: (user) => this.setState({ user })\n      }}>\n        <ThemeProvider theme={theme}>\n          <Router>\n            <Switch>\n              <Route exact path=\"/admin\">\n                <AdminPage/>\n              </Route>\n              <Route exact path=\"/\">\n                <ProductListing/>\n              </Route>\n            </Switch>\n          </Router>\n        </ThemeProvider>\n      </LoginContext.Provider>\n    )\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}