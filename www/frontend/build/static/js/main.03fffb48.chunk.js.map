{"version":3,"sources":["contexts/Login.ts","httpClient.tsx","pages/Admin/ProductEditForm.tsx","utils.ts","components/OrderReport.tsx","pages/Admin/ProductDashboard.tsx","pages/Admin/SignIn.tsx","pages/Admin/index.tsx","pages/ProductList/ProductListItem.tsx","pages/ProductList/index.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["LoginContext","React","createContext","authed","user","setAuthed","setUser","httpClient","axios","create","baseURL","OriginalState","name","slug","price","quantity","description","ProductEditForm","props","state","handleSubmit","e","preventDefault","onSubmit","resetState","updateField","field","value","setState","handleCancel","onCancel","render","Grid","container","spacing","TextField","required","id","label","variant","onChange","event","target","multiline","rows","sx","m","width","type","inputProps","min","InputProps","endAdornment","InputAdornment","position","FormControl","fullWidth","InputLabel","htmlFor","FilledInput","startAdornment","item","Button","onClick","initialState","Component","defaultProps","resetForm","formatCurrency","Intl","NumberFormat","style","currency","format","VIEWS","StyledTableCell","styled","TableCell","theme","tableCellClasses","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","TableRow","action","hover","border","OrderReport","entries","this","getEntries","a","get","response","data","TableContainer","className","component","Paper","Table","minWidth","aria-label","TableHead","align","TableBody","map","entry","scope","productName","parseInt","toFixed","total","ProductDashboard","products","currentProduct","fetchProducts","view","productList","toggleCreate","createProduct","editProduct","product","saveProduct","productData","getProductHttpAction","actionEndpoint","getActionEndpointFromProductData","afterSave","getProducts","productSlug","delete","patch","post","endpoint","components","Fab","report","push","Container","List","bgcolor","length","ListItem","ListItemText","primary","key","secondaryAction","ButtonGroup","IconButton","edge","deleteProduct","secondary","substring","window","print","reverse","SignIp","useContext","FormData","currentTarget","userData","email","password","status","console","log","maxWidth","CssBaseline","Box","marginTop","display","flexDirection","alignItems","Avatar","Typography","noValidate","mt","xs","autoComplete","mb","AdminPage","context","contextType","ProductListItem","productId","handleAddToCart","onAddToCart","endIcon","ProductListing","cartItems","showDialog","showSnackBar","addToCart","buy","handleSnackbarClose","filter","Snackbar","open","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","Alert","severity","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","createTheme","App","Provider","ThemeProvider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03fffb48.chunk.js","sourcesContent":["import React from 'react';\n\nexport const LoginContext = React.createContext({\n    authed: false,\n    user: {},\n    setAuthed: (authed:boolean) => {},\n    setUser: (user:any) => {},\n});","import axios from 'axios';\n\nexport const httpClient = axios.create({\n    baseURL: 'http://localhost:8080/api'\n});","import { Button, FilledInput, FormControl, Grid, InputAdornment, InputLabel, TextField } from '@mui/material';\nimport React, { Component, FormEventHandler } from 'react';\n\n\ntype ProductEditFormProps = typeof ProductEditForm.defaultProps & {\n}\n\nexport type ProductEditFormState = {\n    name: string,\n    slug: string,\n    price: number,\n    quantity: number,\n    description: string\n}\n\nexport const OriginalState: ProductEditFormState = {\n    name: '',\n    slug: '',\n    price: 0,\n    quantity: 0,\n    description: ''\n}\n\nexport class ProductEditForm extends Component<ProductEditFormProps> {\n    \n    static defaultProps = {\n        onSubmit: (state: ProductEditFormState, resetForm: Function) => {},\n        onCancel: () => {},\n        initialState: {...OriginalState}\n    }\n   \n    state: ProductEditFormState = {\n        ...OriginalState\n    }\n\n    constructor(props: ProductEditFormProps) {\n        super(props);\n\n        this.state = {...props.initialState};\n    }   \n\n    handleSubmit:FormEventHandler = (e) => {\n        e.preventDefault();\n        this.props.onSubmit({...this.state}, this.resetState);\n    }\n\n    updateField = (field:string, value:any) => {\n        this.setState( {[field]: value });\n    }\n\n    handleCancel = () => {\n        this.resetState();\n        this.props.onCancel();\n    }\n\n    resetState = () => {\n        this.setState({ ...OriginalState });\n    }\n\n    render = () => (\n        <form onSubmit={this.handleSubmit}>\n            <Grid container spacing={2}>\n                <TextField\n                    required\n                    id=\"filled-required\"\n                    label=\"Nome\"\n                    variant=\"filled\"\n                    onChange = {(event) => this.updateField('name', event.target.value)}\n                    value = {this.state.name}\n                />\n                <TextField\n                    id=\"filled-multiline-static\"\n                    label=\"Descrição\"\n                    multiline\n                    value = {this.state.description}\n                    onChange = {(event) => this.updateField('description', event.target.value)}\n                    variant=\"filled\"\n                    rows={4}\n                />\n                <TextField\n                    label=\"Quantidade\"\n                    id=\"filled-start-adornment\"\n                    sx={{ m: 1, width: '25ch' }}\n                    type=\"number\"\n                        inputProps= {{\n                            min: 0\n                        }}\n                    value = { this.state.quantity }\n                    onChange = {(event) => this.updateField('quantity', event.target.value)}\n                    InputProps={{\n                        endAdornment: <InputAdornment position=\"end\">Un</InputAdornment>,\n                    }}\n                    variant=\"filled\"\n                />\n                <FormControl fullWidth sx={{ m: 1 }} variant=\"filled\">\n                    <InputLabel htmlFor=\"filled-adornment-amount\">Preço</InputLabel>\n                    <FilledInput\n                        id=\"filled-adornment-amount\"\n                        value={this.state.price}\n                        type=\"number\"\n                        inputProps= {{\n                            min: 0\n                        }}\n                        onChange={(event) => { this.updateField('price', event.target.value as unknown as number)}}\n                        startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                    />\n                </FormControl>\n            </Grid>\n            \n            <Grid container spacing={2}>\n                <Grid item>\n                    <Button \n                        variant=\"text\"\n                        onClick = {this.handleCancel}\n                    >\n                        Cancelar\n                    </Button>\n                </Grid>\n                <Grid item>\n                    <Button \n                        type=\"submit\"\n                        variant=\"contained\"\n                    >\n                        Salvar\n                    </Button>\n                </Grid>\n            </Grid>\n        </form>\n    )\n}","export function formatCurrency(value: number) {\n\treturn new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(value);\n}","import { Component } from 'react';\nimport { httpClient } from '../httpClient';\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { formatCurrency } from '../utils';\n\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n\t[`&.${tableCellClasses.head}`]: {\n\t  backgroundColor: theme.palette.common.black,\n\t  color: theme.palette.common.white,\n\t},\n\t[`&.${tableCellClasses.body}`]: {\n\t  fontSize: 14,\n\t},\n  }));\n  \n  const StyledTableRow = styled(TableRow)(({ theme }) => ({\n\t'&:nth-of-type(odd)': {\n\t  backgroundColor: theme.palette.action.hover,\n\t},\n\t// hide last border\n\t'&:last-child td, &:last-child th': {\n\t  border: 0,\n\t},\n  }));\n  \n\nexport class OrderReport extends Component<any> {\n\n\tstate = {\n\t\tentries: [],\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getEntries();\n\t}\n\n\tasync getEntries() {\n\t\tconst response = await httpClient.get('/orders');\n\t\tthis.setState({ entries: response.data });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<TableContainer \n\t\t\t\tclassName={this.props.className}\n\t\t\t\tcomponent={Paper}\n\t\t\t>\n\t\t\t<Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n\t\t\t  <TableHead>\n\t\t\t\t<TableRow>\n\t\t\t\t  <StyledTableCell>Nome</StyledTableCell>\n\t\t\t\t  <StyledTableCell align=\"right\">Preço</StyledTableCell>\n\t\t\t\t  <StyledTableCell align=\"right\">Quantidade</StyledTableCell>\n\t\t\t\t  <StyledTableCell align=\"right\">Total</StyledTableCell>\n\t\t\t\t</TableRow>\n\t\t\t  </TableHead>\n\t\t\t  <TableBody>\n\t\t\t\t{this.state.entries.map((entry: any) => (\n\t\t\t\t  <StyledTableRow key={entry.id}>\n\t\t\t\t\t<StyledTableCell component=\"th\" scope=\"row\">\n\t\t\t\t\t  {entry.productName}\n\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t<StyledTableCell align=\"right\">{formatCurrency(parseInt((parseInt(entry.price)/100).toFixed(2)))}</StyledTableCell>\n\t\t\t\t\t<StyledTableCell align=\"right\">{entry.quantity}</StyledTableCell>\n\t\t\t\t\t<StyledTableCell align=\"right\">{formatCurrency(parseInt((parseInt(entry.total)/100).toFixed(2)))}</StyledTableCell>\n\t\t\t\t  </StyledTableRow>\n\t\t\t\t))}\n\t\t\t  </TableBody>\n\t\t\t</Table>\n\t\t  </TableContainer>\n\t\t)\n\t}\n};","import AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { ButtonGroup, Container, List, ListItem, ListItemText } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport IconButton from '@mui/material/IconButton';\nimport React, { Component } from 'react';\nimport Fab from '@mui/material/Fab';\nimport { httpClient } from '../../httpClient';\nimport InsertDriveFileIcon from '@mui/icons-material/InsertDriveFile';\nimport { OriginalState, ProductEditForm, ProductEditFormState } from './ProductEditForm';\nimport { OrderReport } from '../../components/OrderReport';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport PrintIcon from '@mui/icons-material/Print';\n\nenum VIEWS {\n    productList,\n    createProduct,\n    editProduct,\n    report\n}\n\n\nexport class ProductDashboard extends Component {\n\n    state = {\n        products: [],\n        currentProduct: OriginalState,\n        fetchProducts: true,\n        view: VIEWS.productList\n    }\n\n    componentDidMount() {\n        this.getProducts();\n    }\n\n    componentDidUpdate() {\n        this.getProducts();\n    }\n\n    async getProducts() {\n\n        if (!this.state.fetchProducts) return;\n\n        const { data:products } = await httpClient.get('/product');\n\n        this.setState({ \n            products: products,\n            fetchProducts: false\n        })\n    }\n\n    async deleteProduct(productSlug:string) {\n        \n        const response = await httpClient.delete(`/product/${productSlug}`);\n\n        this.setState({ fetchProducts: true });\n    }\n\n    toggleCreate = () => {\n        let view;\n\n        switch (this.state.view) {\n            \n            case VIEWS.productList:\n                view = VIEWS.createProduct;\n                break;\n            \n            default:\n                view = VIEWS.productList;\n        }\n\n        this.setState({ view });\n    }\n\n    editProduct = (product: any) => {\n        this.setState({\n            view: VIEWS.editProduct,\n            currentProduct: product\n        });\n    }\n\n    saveProduct = async (productData: any, resetForm: Function) => {\n\n        const action = this.getProductHttpAction();\n        const actionEndpoint = this.getActionEndpointFromProductData(productData);\n        const response = await action(actionEndpoint, productData);\n\n        this.afterSave();\n        resetForm();\n    }\n\n    afterSave() {\n        if (this.state.view === VIEWS.editProduct) this.toggleCreate();\n        this.setState({ fetchProducts: true });\n    }\n\n    getProductHttpAction() {\n        switch(this.state.view) {\n            case VIEWS.editProduct:\n                return httpClient.patch;\n            case VIEWS.createProduct:\n                return httpClient.post;\n\n            default:\n                return () => {}\n        }\n    }\n\n    getActionEndpointFromProductData(productData: ProductEditFormState) {\n\n        let endpoint = '/product';\n\n        if (this.state.view === VIEWS.editProduct) {\n            endpoint += `/${productData.slug}`\n        }\n\n        return endpoint;\n    }\n\n    render() {\n\n        const components = [\n            <Fab \n                color=\"primary\"\n                aria-label=\"add\"\n                className=\"hideFromPrint\"\n                onClick = {this.toggleCreate}\n            >\n                {this.state.view === VIEWS.productList ? \n                    <AddIcon /> : <CloseIcon/>\n                }\n            </Fab>,\n            <Fab \n                color=\"primary\"\n                aria-label=\"add\"\n                className=\"hideFromPrint\"\n                onClick = {() => this.setState({ view: this.state.view === VIEWS.report ? VIEWS.productList : VIEWS.report })}\n            >\n                {this.state.view === VIEWS.report ? \n                    <ArrowBackIcon/> : <InsertDriveFileIcon />\n                }\n            </Fab>\n        ]\n\n        // Mal-escrito\n        switch (this.state.view) {\n\n            case VIEWS.createProduct:\n                components.push(\n                    <Container>\n                        <ProductEditForm\n                            onSubmit = {this.saveProduct}\n                            onCancel = {this.toggleCreate}\n                        />\n                    </Container>\n                );\n                break;\n\n            case VIEWS.editProduct:\n                components.push(\n                    <Container>\n                        <ProductEditForm\n                            initialState = {this.state.currentProduct}\n                            onSubmit = {this.saveProduct}\n                            onCancel = {this.toggleCreate}\n                        />\n                    </Container>\n                );\n                break;\n\n            case VIEWS.productList: \n                components.push(\n                    <Container className=\"hideFromPrint\">\n                        <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\n                            {!this.state.products.length && (\n                                <ListItem>\n                                    <ListItemText \n                                        primary = {'Nenhum Produto Encontrado'} \n                                    />\n                                </ListItem>\n                            )}\n\n                            {this.state.products.map((product:any, key) => (\n                                <ListItem\n                                    key={key}\n                                    secondaryAction={\n                                        <ButtonGroup>\n                                            <IconButton \n                                                edge=\"end\" \n                                                aria-label=\"edit\"\n                                                onClick = {() => this.editProduct(product)}\n                                            >\n                                                <EditIcon />\n                                            </IconButton>\n                                            <IconButton \n                                                edge=\"end\"\n                                                aria-label=\"delete\"\n                                                onClick = {() => this.deleteProduct(product.slug)}\n                                            >\n                                                <DeleteIcon />\n                                            </IconButton>\n                                        </ButtonGroup>\n                                    }\n                                >\n                                    <ListItemText \n                                        primary = {product.name} \n                                        secondary = {product?.description ? product.description.substring(0, 90) + '...' : ''}\n                                    />\n                                </ListItem>\n                            ))}\n                        </List>\n                    </Container>\n                );\n                break;\n\n            case VIEWS.report:\n                components.push(\n                    <Container>\n                        <OrderReport/>\n                        <IconButton \n                            edge=\"end\" \n                            aria-label=\"edit\"\n                            className=\"hideFromPrint\"\n                            onClick = {() => window.print()}\n                        >\n                            <PrintIcon/>\n                        </IconButton>\n                    </Container>\n                );\n                break;\n        }\n\n        return components.reverse();\n    }\n}","import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport { Avatar, Box, Button, Container, CssBaseline, Grid, TextField, Typography } from '@mui/material';\nimport { useContext } from 'react';\nimport { LoginContext } from '../../contexts/Login';\nimport { httpClient } from '../../httpClient';\n\n\nexport default function SignIp() {\n\n    const { setAuthed } = useContext(LoginContext);\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n\n    const userData = {\n      email: data.get(\"username\"),\n      password: data.get(\"password\"),\n    };\n\n    const response: Response = await httpClient.post('/auth/login', userData);\n\n    if (response.status === 200) {\n        setAuthed(true);\n    }\n    console.log({ response });\n  };\n\n  return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Login\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label=\"Email\"\n                  name=\"username\"\n                  autoComplete=\"username\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Senha\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Log In\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n  );\n}\n","import React, { Component } from 'react';\nimport { LoginContext } from '../../contexts/Login';\nimport { ProductDashboard } from './ProductDashboard';\nimport SignIn from './SignIn';\n\nexport class AdminPage extends Component {\n    render() {\n        console.log('context', this.context);\n        return (\n            this.context.authed ? <ProductDashboard /> : <SignIn />\n        );\n    }\n}\n\nAdminPage.contextType = LoginContext;","import { Component } from 'react';\nimport { ListItem, ButtonGroup, TextField, InputAdornment, Button, ListItemText } from '@mui/material';\nimport AddShoppingCartIcon from '@mui/icons-material/AddShoppingCart';\n\ninterface ProductListItemProps {\n    product: any,\n    onAddToCart: Function\n}\n\nexport class ProductListItem extends Component<ProductListItemProps> {\n\n    state = {\n        quantity: 0,\n        productId: 0\n    }\n\n    constructor(props: ProductListItemProps) {\n        super(props);\n\n        this.state.productId = parseInt(props.product.id);\n    }\n\n    updateField = (field:string , value:number) => {\n        this.setState({ [field]: value });\n    }\n\n    handleAddToCart = () => {\n        this.props.onAddToCart({\n            ...this.props.product,\n            quantity: this.state.quantity,\n        });\n    }\n    \n    render = () => (\n        <ListItem\n            secondaryAction={\n                <ButtonGroup>\n                    <TextField\n                        label=\"Quantidade\"\n                        id=\"filled-start-adornment\"\n                        sx={{ m: 1, width: '25ch' }}\n                        type=\"number\"\n                            inputProps= {{\n                                min: 0\n                            }}\n                        value = { this.state.quantity }\n                        onChange = {(event) => this.updateField('quantity', parseInt(event.target.value))}\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">Un</InputAdornment>,\n                        }}\n                        variant=\"filled\"\n                    />\n                    <Button \n                        variant=\"contained\" \n                        onClick = {this.handleAddToCart}\n                        endIcon={<AddShoppingCartIcon />}\n                    >\n                        Adicionar\n                    </Button>\n                </ButtonGroup>\n            }\n        >\n            <ListItemText \n                primary = {this.props.product.name} \n                secondary = {this.props.product?.description ? this.props.product.description.substring(0, 90) + '...' : ''}\n            />\n        </ListItem>\n    )\n}","import ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\nimport { Alert, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Fab, List, ListItem, ListItemText, Snackbar } from '@mui/material';\nimport React, { Component } from 'react';\nimport { httpClient } from '../../httpClient';\nimport { ProductListItem } from './ProductListItem';\n\n\nexport class ProductListing extends Component {\n\n    state = {\n        products: [],\n        cartItems: [],\n        showDialog: false,\n        showSnackBar: false,\n        fetchProducts: true\n    }\n\n    componentDidMount() {\n        this.getProducts();\n    }\n\n    componentDidUpdate() {\n        this.getProducts();\n    }\n\n    async getProducts() {\n\n        if (!this.state.fetchProducts) return;\n\n        const { data:products } = await httpClient.get('/product');\n\n        console.log('products', products);\n\n        this.setState({ \n            products: products.filter((product:any) => product.quantity > 0),\n            fetchProducts: false\n        })\n    }\n\n    addToCart = (product: any) => {\n\n        if (!product.quantity) return;\n\n        this.setState({\n            cartItems: [...this.state.cartItems, {\n                productId: product.id,\n                quantity: parseInt(product.quantity),\n                productName: product.name,\n                price: parseInt(product.price),\n            }],\n            showSnackBar: true\n        })\n    }\n\n    buy = async () => {\n\n        if (!this.state.cartItems.length) return;\n\n        const response = await httpClient.post('/order', this.state.cartItems);\n        this.setState({ showDialog: true, fetchProducts: true, cartItems: [] });\n    }\n\n    handleSnackbarClose = () => {\n        this.setState({ showSnackBar: false });\n    }\n\n    render() {\n\n        return (\n            <>\n                <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\n                    {!this.state.products.length && (\n                        <ListItem>\n                            <ListItemText \n                                primary = {'Nenhum Produto Encontrado'} \n                            />\n                        </ListItem>\n                    )}\n\n                    {this.state.products.map((product:any) => (\n                        <ProductListItem \n                            key = {product.id}\n                            product = {product}\n                            onAddToCart = {this.addToCart}\n                        />\n                    ))}\n                </List>\n                <Fab\n                    variant=\"extended\"\n                    onClick={this.buy}\n                >\n                    Finalizar Comprar\n                    <ShoppingCartIcon />\n                </Fab>\n                <Snackbar \n                    open={this.state.showSnackBar}\n                    autoHideDuration={3000}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleSnackbarClose}\n                >\n                    <Alert onClose={this.handleSnackbarClose} severity=\"success\" sx={{ width: '100%' }}>\n                        Item adicionado ao carrinho\n                    </Alert>\n                </Snackbar>\n                <Dialog\n                    open={this.state.showDialog}\n                    onClose={() => this.setState({ showDialog: false })}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">\n                        Pedido efetuado!\n                    </DialogTitle>\n                    <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Seu pedido foi efetuado.\n                    </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => this.setState({ showDialog: false })} autoFocus>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n            \n        )\n    }\n}","import { createTheme, ThemeProvider } from '@mui/material/styles';\nimport * as React from 'react';\nimport {\n  BrowserRouter as Router, Route, Switch\n} from \"react-router-dom\";\nimport { LoginContext } from './contexts/Login';\nimport './App.css';\nimport { AdminPage }  from './pages/Admin';\nimport { ProductListing } from './pages/ProductList';\n\nconst theme = createTheme();\nexport default class App extends React.Component {\n  state = {\n    authed: false,\n    user: {},\n  }\n\n  render() {\n    return (\n      <LoginContext.Provider value={{\n        authed: this.state.authed, \n        user: this.state.user,\n        setAuthed: (authed) => this.setState({ authed }),\n        setUser: (user) => this.setState({ user })\n      }}>\n        <ThemeProvider theme={theme}>\n          <Router>\n            <Switch>\n              <Route exact path=\"/admin\">\n                <AdminPage/>\n              </Route>\n              <Route exact path=\"/\">\n                <ProductListing/>\n              </Route>\n            </Switch>\n          </Router>\n        </ThemeProvider>\n      </LoginContext.Provider>\n    )\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}